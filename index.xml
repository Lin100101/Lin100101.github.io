<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Lin100101</title>
        <link>https://Lin100101.github.io/</link>
        <description>Recent content on Lin100101</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Lin100101</copyright>
        <lastBuildDate>Mon, 03 Mar 2025 11:26:47 +0800</lastBuildDate><atom:link href="https://Lin100101.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>构建Java项目的核心组件：工程、模块、包与类</title>
        <link>https://Lin100101.github.io/p/%E6%9E%84%E5%BB%BAjava%E9%A1%B9%E7%9B%AE%E7%9A%84%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%A8%A1%E5%9D%97%E5%8C%85%E4%B8%8E%E7%B1%BB/</link>
        <pubDate>Mon, 03 Mar 2025 11:26:47 +0800</pubDate>
        
        <guid>https://Lin100101.github.io/p/%E6%9E%84%E5%BB%BAjava%E9%A1%B9%E7%9B%AE%E7%9A%84%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%A8%A1%E5%9D%97%E5%8C%85%E4%B8%8E%E7%B1%BB/</guid>
        <description>&lt;p&gt;在Java编程中，工程（Project）、模块（Module）、包（Package）和类（Class）是组织代码的重要概念。下面我将分别介绍这些概念。&lt;/p&gt;
&lt;h3 id=&#34;工程project&#34;&gt;工程（Project）
&lt;/h3&gt;&lt;p&gt;一个工程指的是一个完整的项目或应用程序，通常包含多个模块、包和类。它是一个高层次的概念，代表了一个开发任务的整体。例如，在IDE（集成开发环境）中创建一个新的Java项目时，这个项目就是一个工程。&lt;/p&gt;
&lt;h3 id=&#34;模块module&#34;&gt;模块（Module）
&lt;/h3&gt;&lt;p&gt;模块是在Java 9引入的一个新特性，用于更好地组织大型程序的代码，并控制不同部分之间的可见性和依赖关系。模块通过&lt;code&gt;module-info.java&lt;/code&gt;文件来声明其名称、依赖关系以及其他配置信息。模块使得代码更加清晰和安全，因为它允许你明确地指定哪些包是可以被其他模块访问的。&lt;/p&gt;
&lt;h3 id=&#34;包package&#34;&gt;包（Package）
&lt;/h3&gt;&lt;p&gt;包是用来组织类的一种方式，类似于文件夹的作用。包有助于避免类名冲突，并使项目的结构更加清晰。每个包都有一个唯一的全限定名（Fully Qualified Name），通常是反向域名的形式，比如&lt;code&gt;com.example.myapp&lt;/code&gt;。在一个包中的所有类共享同一个命名空间，因此可以通过包名来区分不同的类。&lt;/p&gt;
&lt;h3 id=&#34;类class&#34;&gt;类（Class）
&lt;/h3&gt;&lt;p&gt;类是面向对象编程的基本构建块，它是对一类事物的抽象描述。一个类定义了对象的行为和状态，包括属性（成员变量）和方法（行为）。类是实例化的模板，而实例化的对象称为类的对象或实例。例如，你可以有一个名为&lt;code&gt;Car&lt;/code&gt;的类，它可以有属性如颜色、品牌等，以及方法如启动引擎、加速等。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;关系总结&#34;&gt;关系总结
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;工程包含模块&lt;/strong&gt;：一个工程可以包含一个或多个模块。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模块包含包&lt;/strong&gt;：一个模块可以包含一个或多个包。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;包包含类&lt;/strong&gt;：一个包可以包含一个或多个类。&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>探索Java：无Public类时的文件命名与执行指南</title>
        <link>https://Lin100101.github.io/p/%E6%8E%A2%E7%B4%A2java%E6%97%A0public%E7%B1%BB%E6%97%B6%E7%9A%84%E6%96%87%E4%BB%B6%E5%91%BD%E5%90%8D%E4%B8%8E%E6%89%A7%E8%A1%8C%E6%8C%87%E5%8D%97/</link>
        <pubDate>Wed, 26 Feb 2025 18:30:15 +0800</pubDate>
        
        <guid>https://Lin100101.github.io/p/%E6%8E%A2%E7%B4%A2java%E6%97%A0public%E7%B1%BB%E6%97%B6%E7%9A%84%E6%96%87%E4%BB%B6%E5%91%BD%E5%90%8D%E4%B8%8E%E6%89%A7%E8%A1%8C%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h5 id=&#34;java作为一种广泛使用的面向对象编程语言其设计和规范中包含了一系列严格的文件和类命名规则这些规则对于确保代码的可读性可维护性和互操作性至关重要&#34;&gt;Java作为一种广泛使用的面向对象编程语言，其设计和规范中包含了一系列严格的文件和类命名规则。这些规则对于确保代码的可读性、可维护性和互操作性至关重要。
&lt;/h5&gt;&lt;p&gt;例如：如果一个 Java 文件中包含了一个 &lt;code&gt;public&lt;/code&gt; 类，那么这个文件的名称必须与这个 &lt;code&gt;public&lt;/code&gt; 类的名称完全相同。这是Java语言的一个强制性规则。例如，如果你有一个 &lt;code&gt;public class SimpleDemo&lt;/code&gt;，那么这个类必须保存在名为 &lt;code&gt;SimpleDemo.java&lt;/code&gt; 的文件中。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;SimpleDemo&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;这是一个简单的Java程序。&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在这种情况下，编译完后的class文件名也是SimpleDemo。&lt;/p&gt;
&lt;hr&gt;
&lt;h6 id=&#34;如果-java-文件中没有-public-类则文件名可以是任意的尽管通常的做法是根据文件中最重要的类来命名文件以提高代码的可读性和可维护性&#34;&gt;如果 Java 文件中没有 &lt;code&gt;public&lt;/code&gt; 类，则文件名可以是任意的，尽管通常的做法是根据文件中最重要的类来命名文件，以提高代码的可读性和可维护性。
&lt;/h6&gt;&lt;p&gt;此时我们要把一个包含有一个名叫SimpleDemo非public的类的Java文件名改成test.java,这种操作是没错的，只是不符合规范而已。随后我们javac test.java,然后再&lt;del&gt;java test&lt;/del&gt;。&lt;/p&gt;
&lt;p&gt;java test这个操作是错误的，让我们看看javac test.java之后产生了什么文件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://Lin100101.github.io/p/%E6%8E%A2%E7%B4%A2java%E6%97%A0public%E7%B1%BB%E6%97%B6%E7%9A%84%E6%96%87%E4%BB%B6%E5%91%BD%E5%90%8D%E4%B8%8E%E6%89%A7%E8%A1%8C%E6%8C%87%E5%8D%97/index.png&#34;
	width=&#34;1096&#34;
	height=&#34;87&#34;
	srcset=&#34;https://Lin100101.github.io/p/%E6%8E%A2%E7%B4%A2java%E6%97%A0public%E7%B1%BB%E6%97%B6%E7%9A%84%E6%96%87%E4%BB%B6%E5%91%BD%E5%90%8D%E4%B8%8E%E6%89%A7%E8%A1%8C%E6%8C%87%E5%8D%97/index_hu_3edcd4a41e51603a.png 480w, https://Lin100101.github.io/p/%E6%8E%A2%E7%B4%A2java%E6%97%A0public%E7%B1%BB%E6%97%B6%E7%9A%84%E6%96%87%E4%BB%B6%E5%91%BD%E5%90%8D%E4%B8%8E%E6%89%A7%E8%A1%8C%E6%8C%87%E5%8D%97/index_hu_79ebaa3fdbc63e8c.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;index&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1259&#34;
		data-flex-basis=&#34;3023px&#34;
	
&gt;&lt;/p&gt;
&lt;h6 id=&#34;所以java-simpledemo才是正确的操作&#34;&gt;所以java SimpleDemo才是正确的操作
&lt;/h6&gt;&lt;h5 id=&#34;此外java是大小写敏感的语言这意味着-myclass-和-myclass-会被视为两个不同的标识符因此文件名必须精确匹配类名的大小写&#34;&gt;此外Java是大小写敏感的语言，这意味着 &lt;code&gt;MyClass&lt;/code&gt; 和 &lt;code&gt;myclass&lt;/code&gt; 会被视为两个不同的标识符。因此，文件名必须精确匹配类名的大小写。
&lt;/h5&gt;&lt;p&gt;虽然你可以将不带 &lt;code&gt;public&lt;/code&gt; 修饰符的 &lt;code&gt;SimpleDemo&lt;/code&gt; 类放在名为 &lt;code&gt;test.java&lt;/code&gt; 的文件中，但这并不符合常见的最佳实践。按照最佳实践，即便类不是 &lt;code&gt;public&lt;/code&gt; 的，最好还是让文件名与类名保持一致，即命名为 &lt;code&gt;SimpleDemo.java&lt;/code&gt;，这样有助于提高代码的可读性和维护性。此外，遵循这些惯例也使得项目更易于被其他开发者理解。&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&#34;总之严格遵守java的文件和类命名规则不仅有助于编写高质量的代码还能提升开发效率降低维护成本并确保应用程序的稳定性和扩展性这些规则是构建大型复杂系统的基础也是实现良好软件工程实践的重要组成部分&#34;&gt;总之，严格遵守Java的文件和类命名规则不仅有助于编写高质量的代码，还能提升开发效率，降低维护成本，并确保应用程序的稳定性和扩展性。这些规则是构建大型复杂系统的基础，也是实现良好软件工程实践的重要组成部分。
&lt;/h5&gt;</description>
        </item>
        <item>
        <title>Test</title>
        <link>https://Lin100101.github.io/p/test/</link>
        <pubDate>Wed, 29 Jan 2025 15:01:31 +0800</pubDate>
        
        <guid>https://Lin100101.github.io/p/test/</guid>
        <description>&lt;h3 id=&#34;test&#34;&gt;test
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://Lin100101.github.io/p/test/test.jpg&#34;
	width=&#34;640&#34;
	height=&#34;640&#34;
	srcset=&#34;https://Lin100101.github.io/p/test/test_hu_8a57a4eccf2657e3.jpg 480w, https://Lin100101.github.io/p/test/test_hu_8abb33565950b1fc.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;test&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>归档</title>
        <link>https://Lin100101.github.io/archives/</link>
        <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
        
        <guid>https://Lin100101.github.io/archives/</guid>
        <description></description>
        </item>
        <item>
        <title>关于</title>
        <link>https://Lin100101.github.io/%E5%85%B3%E4%BA%8E/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://Lin100101.github.io/%E5%85%B3%E4%BA%8E/</guid>
        <description>&lt;h1 id=&#34;关于我&#34;&gt;关于我
&lt;/h1&gt;&lt;p&gt;你好！我是Lin100101，欢迎来到我的个人博客。在这里，我会分享一些关于编程的想法、经验和学习笔记。希望通过这些分享能够帮助到有相同兴趣的朋友，并与大家交流心得。&lt;/p&gt;
&lt;h2 id=&#34;背景&#34;&gt;背景
&lt;/h2&gt;&lt;p&gt;我目前是一名主修软件工程专业的本科学生。&lt;/p&gt;
&lt;h2 id=&#34;博客目的&#34;&gt;博客目的
&lt;/h2&gt;&lt;p&gt;创建这个博客的主要目的是为了记录我的成长历程、分享所学知识以及探索过程中的点滴。&lt;/p&gt;
&lt;h2 id=&#34;联系方式&#34;&gt;联系方式
&lt;/h2&gt;&lt;p&gt;如果你对我的文章有任何疑问或建议，或者只是想打个招呼，请随时通过以下方式联系我：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;邮箱: &lt;a class=&#34;link&#34; href=&#34;mailto:2410348705@qq.com&#34; &gt;2410348705@qq.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GitHub: &lt;a class=&#34;link&#34; href=&#34;https://github.com/Lin100101&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Lin100101 (Lin100101)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感谢你的访问和支持！希望你能在这个博客中找到对你有用的信息。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>搜索</title>
        <link>https://Lin100101.github.io/search/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://Lin100101.github.io/search/</guid>
        <description></description>
        </item>
        <item>
        <title>友情链接</title>
        <link>https://Lin100101.github.io/%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://Lin100101.github.io/%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5/</guid>
        <description></description>
        </item>
        
    </channel>
</rss>
